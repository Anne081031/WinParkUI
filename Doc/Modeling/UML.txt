P20

研究怎么做之前很重要的一点是要正确分析出系统要做什么

静态视图不描述与时间有关的系统行为，动态视图则是这样的。

mesh mashup
用例驱动 UML
静态视图主要使用类图
对所有行为视图起指导作用的是一组用例，每一个用例描述了一个用例参与者或系统外部用户可见的一个功能。
构造型是一种新的模型元素 StereoType

System Requirement ( Use Case Diagram )

静态图：是基础图
Class Diagram 类图是以类为中心
类是应用领域或应用解决方案中概念的描述。

Use Case Diagram
用例视图是被称为参与者的外部用户所能观察到的系统功能的模型图。用例是系统中的
一个功能单元，可以被描述为参与者与系统之间的一次交互作用。用例模型的用途是列出系
统中的用例和参与者，并显示哪个参与者参与了哪个用例的执行。

动态图：
交互视图描述了执行系统功能的各个角色之间相互传递消息的顺序关系。类元是对在系
统内交互关系中起特定作用的一个对象的描述，这使它区别于同类的其他对象。交互视图显
示了跨越多个对象的系统控制流程。交互视图可用两种图来表示：顺序图和协作图，它们各
有不同的侧重点。

Sequence Diagram
顺序图表示了对象之间传送消息的时间顺序。
顺序图的一个用途是用来表示用例中的行为顺序。当执行一个用例行为时，顺序图中的
每条消息对应了一个类操作或状态机中引起转换的触发事件。强调时序关系

Collaboration Diagram
协作图对在一次交互中有意义的对象和对象间的链建模,强调连接关系。

顺序图和协作图都可以表示各对象间的交互关系.

State Machine Diagram
状态机视图是一个类对象所可能经历的所有历程的模型图

Activity Diagram
活动图是状态机的一个变体，用来描述执行算法的工作流程中涉及的活动。工作流程建模

物理视图有两种：实现视图和部署视图

Component Diagram
实现视图用构件图来表现

Deployment Diagram
部署视图描述位于节点实例上的运行构件实例的安排。节点是一组运行资源，如计算机、
设备或存储器。这个视图允许评估分配结果和资源分配。部署图（实例层）, 部署图（描述层）

Package Diagram
模型管理视图，模型管理信息通常在类图中表达。
模型是一种特殊的包。子系统是另一种特殊的包，它代表了系统的一个部分，它有清晰的接口，这个接口可作为一个单独的构件来实现

UML System--->Models-->TopPackage-->OtherElements
  |
  |-->Packages-->OtherElements

UML包含三种主要的扩展组件：约束、构造型和标记值。

静态视图是U M L的基础。类元是描述事物的建模元素,包括类、接口和数据类型等等。对象是类的实例

类是对现实中各种物理事物、逻辑概念的抽象，抽象、封装、多态、继承，类是面向对象系统组织结构的核心。对象是用来构造实际运行系统的个体，对象的生命期由附加给类的状态机来描述
Class---Object / static
Node---Node Instance
Component---Component Instance
Interface---Implementation
泛化使更具体的类（子类）与含有几个子类公同特性的更普通的类（超类）联系起来。
接口是在没有给出对象的实现和状态的情况下对对象行为的描述。
数据类型

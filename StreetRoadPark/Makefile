#############################################################################
# Makefile for building: StreetRoadPark
# Generated by qmake (3.0) (Qt 5.1.1) on: ??? ??? 9 13:23:42 2013
# Project:  StreetRoadPark.pro
# Template: subdirs
# Command: F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\bin\qmake.exe -spec win32-g++ -o Makefile StreetRoadPark.pro
#############################################################################

MAKEFILE      = Makefile

first: make_first
QMAKE         = F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
DEL_FILE      = del
SYMLINK       = copy /y
DEL_DIR       = rmdir
MOVE          = move
SUBTARGETS    =  \
		sub-StreetRoadParkServer \
		sub-SerialPortLibrary \
		sub-DatabaseLibrary \
		sub-NetworkLibrary \
		sub-StreetRoadParkClient \
		sub-Test


sub-StreetRoadParkServer-qmake_all:  FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile
	cd StreetRoadParkServer\ && $(MAKE) -f Makefile qmake_all
sub-StreetRoadParkServer: FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile
sub-StreetRoadParkServer-make_first: FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile 
sub-StreetRoadParkServer-all: FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile all
sub-StreetRoadParkServer-clean: FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile clean
sub-StreetRoadParkServer-distclean: FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile distclean
sub-StreetRoadParkServer-install_subtargets: FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile install
sub-StreetRoadParkServer-uninstall_subtargets: FORCE
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-SerialPortLibrary-qmake_all:  FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile
	cd SerialPortLibrary\ && $(MAKE) -f Makefile qmake_all
sub-SerialPortLibrary: FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile
sub-SerialPortLibrary-make_first: FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile 
sub-SerialPortLibrary-all: FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile all
sub-SerialPortLibrary-clean: FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile clean
sub-SerialPortLibrary-distclean: FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile distclean
sub-SerialPortLibrary-install_subtargets: FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile install
sub-SerialPortLibrary-uninstall_subtargets: FORCE
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-DatabaseLibrary-qmake_all:  FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile
	cd DatabaseLibrary\ && $(MAKE) -f Makefile qmake_all
sub-DatabaseLibrary: FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile
sub-DatabaseLibrary-make_first: FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile 
sub-DatabaseLibrary-all: FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile all
sub-DatabaseLibrary-clean: FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile clean
sub-DatabaseLibrary-distclean: FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile distclean
sub-DatabaseLibrary-install_subtargets: FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile install
sub-DatabaseLibrary-uninstall_subtargets: FORCE
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-NetworkLibrary-qmake_all:  FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile
	cd NetworkLibrary\ && $(MAKE) -f Makefile qmake_all
sub-NetworkLibrary: FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile
sub-NetworkLibrary-make_first: FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile 
sub-NetworkLibrary-all: FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile all
sub-NetworkLibrary-clean: FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile clean
sub-NetworkLibrary-distclean: FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile distclean
sub-NetworkLibrary-install_subtargets: FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile install
sub-NetworkLibrary-uninstall_subtargets: FORCE
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-StreetRoadParkClient-qmake_all:  FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile
	cd StreetRoadParkClient\ && $(MAKE) -f Makefile qmake_all
sub-StreetRoadParkClient: FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile
sub-StreetRoadParkClient-make_first: FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile 
sub-StreetRoadParkClient-all: FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile all
sub-StreetRoadParkClient-clean: FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile clean
sub-StreetRoadParkClient-distclean: FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile distclean
sub-StreetRoadParkClient-install_subtargets: FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile install
sub-StreetRoadParkClient-uninstall_subtargets: FORCE
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-Test-qmake_all:  FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile
	cd Test\ && $(MAKE) -f Makefile qmake_all
sub-Test: FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile
sub-Test-make_first: FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile 
sub-Test-all: FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile all
sub-Test-clean: FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile clean
sub-Test-distclean: FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile distclean
sub-Test-install_subtargets: FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile install
sub-Test-uninstall_subtargets: FORCE
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile uninstall

Makefile: StreetRoadPark.pro F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/win32-g++/qmake.conf F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/spec_pre.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/qdevice.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/device_config.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/common/shell-win32.conf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/qconfig.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_axbase.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_axcontainer.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_axserver.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_clucene.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_concurrent.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_core.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_declarative.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_designer.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_designercomponents.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_gui.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_help.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_multimedia.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_multimediawidgets.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_network.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_opengl.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_openglextensions.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_platformsupport.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_printsupport.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_qml.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_qmldevtools.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_qmltest.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_qtmultimediaquicktools.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_quick.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_quickparticles.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_script.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_scripttools.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_sensors.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_serialport.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_sql.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_svg.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_testlib.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_uitools.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_v8.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_webkit.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_webkitwidgets.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_widgets.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_xml.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/modules/qt_lib_xmlpatterns.pri \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/qt_functions.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/qt_config.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/win32-g++/qmake.conf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/spec_post.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/exclusive_builds.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/default_pre.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/win32/default_pre.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/resolve_config.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/default_post.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/win32/rtti.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/warn_on.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/win32/windows.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/testcase_targets.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/exceptions.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/yacc.prf \
		F:/QtSDK/Qt5.1.1/5.1.1/mingw48_32/mkspecs/features/lex.prf \
		StreetRoadPark.pro
	$(QMAKE) -spec win32-g++ -o Makefile StreetRoadPark.pro
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\spec_pre.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\qdevice.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\device_config.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\common\shell-win32.conf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\qconfig.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_axbase.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_axcontainer.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_axserver.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_clucene.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_concurrent.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_core.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_declarative.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_designer.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_designercomponents.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_gui.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_help.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_multimedia.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_multimediawidgets.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_network.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_opengl.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_openglextensions.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_platformsupport.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_printsupport.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_qml.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_qmldevtools.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_qmltest.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_qtmultimediaquicktools.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_quick.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_quickparticles.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_script.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_scripttools.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_sensors.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_serialport.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_sql.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_svg.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_testlib.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_uitools.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_v8.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_webkit.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_webkitwidgets.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_widgets.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_xml.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\modules\qt_lib_xmlpatterns.pri:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\qt_functions.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\qt_config.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\win32-g++\qmake.conf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\spec_post.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\exclusive_builds.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\default_pre.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\win32\default_pre.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\resolve_config.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\default_post.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\win32\rtti.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\warn_on.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\win32\windows.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\testcase_targets.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\exceptions.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\yacc.prf:
F:\QtSDK\Qt5.1.1\5.1.1\mingw48_32\mkspecs\features\lex.prf:
StreetRoadPark.pro:
qmake: FORCE
	@$(QMAKE) -spec win32-g++ -o Makefile StreetRoadPark.pro

qmake_all: sub-StreetRoadParkServer-qmake_all sub-SerialPortLibrary-qmake_all sub-DatabaseLibrary-qmake_all sub-NetworkLibrary-qmake_all sub-StreetRoadParkClient-qmake_all sub-Test-qmake_all FORCE

make_first: sub-StreetRoadParkServer-make_first sub-SerialPortLibrary-make_first sub-DatabaseLibrary-make_first sub-NetworkLibrary-make_first sub-StreetRoadParkClient-make_first sub-Test-make_first FORCE
all: sub-StreetRoadParkServer-all sub-SerialPortLibrary-all sub-DatabaseLibrary-all sub-NetworkLibrary-all sub-StreetRoadParkClient-all sub-Test-all FORCE
clean: sub-StreetRoadParkServer-clean sub-SerialPortLibrary-clean sub-DatabaseLibrary-clean sub-NetworkLibrary-clean sub-StreetRoadParkClient-clean sub-Test-clean FORCE
distclean: sub-StreetRoadParkServer-distclean sub-SerialPortLibrary-distclean sub-DatabaseLibrary-distclean sub-NetworkLibrary-distclean sub-StreetRoadParkClient-distclean sub-Test-distclean FORCE
	-$(DEL_FILE) Makefile
install_subtargets: sub-StreetRoadParkServer-install_subtargets sub-SerialPortLibrary-install_subtargets sub-DatabaseLibrary-install_subtargets sub-NetworkLibrary-install_subtargets sub-StreetRoadParkClient-install_subtargets sub-Test-install_subtargets FORCE
uninstall_subtargets: sub-StreetRoadParkServer-uninstall_subtargets sub-SerialPortLibrary-uninstall_subtargets sub-DatabaseLibrary-uninstall_subtargets sub-NetworkLibrary-uninstall_subtargets sub-StreetRoadParkClient-uninstall_subtargets sub-Test-uninstall_subtargets FORCE

sub-StreetRoadParkServer-sub_Debug:
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile debug
sub-SerialPortLibrary-sub_Debug:
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile debug
sub-DatabaseLibrary-sub_Debug:
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile debug
sub-NetworkLibrary-sub_Debug:
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile debug
sub-StreetRoadParkClient-sub_Debug:
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile debug
sub-Test-sub_Debug:
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile debug
debug: sub-StreetRoadParkServer-sub_Debug sub-SerialPortLibrary-sub_Debug sub-DatabaseLibrary-sub_Debug sub-NetworkLibrary-sub_Debug sub-StreetRoadParkClient-sub_Debug sub-Test-sub_Debug

sub-StreetRoadParkServer-sub_Release:
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile release
sub-SerialPortLibrary-sub_Release:
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile release
sub-DatabaseLibrary-sub_Release:
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile release
sub-NetworkLibrary-sub_Release:
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile release
sub-StreetRoadParkClient-sub_Release:
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile release
sub-Test-sub_Release:
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile release
release: sub-StreetRoadParkServer-sub_Release sub-SerialPortLibrary-sub_Release sub-DatabaseLibrary-sub_Release sub-NetworkLibrary-sub_Release sub-StreetRoadParkClient-sub_Release sub-Test-sub_Release

sub-StreetRoadParkServer-check:
	@if not exist StreetRoadParkServer\ mkdir StreetRoadParkServer\ & if not exist StreetRoadParkServer\ exit 1
	cd StreetRoadParkServer\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkServer\StreetRoadParkServer.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile check
sub-SerialPortLibrary-check:
	@if not exist SerialPortLibrary\ mkdir SerialPortLibrary\ & if not exist SerialPortLibrary\ exit 1
	cd SerialPortLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\SerialPortLibrary\SerialPortLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile check
sub-DatabaseLibrary-check:
	@if not exist DatabaseLibrary\ mkdir DatabaseLibrary\ & if not exist DatabaseLibrary\ exit 1
	cd DatabaseLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\DatabaseLibrary\DatabaseLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile check
sub-NetworkLibrary-check:
	@if not exist NetworkLibrary\ mkdir NetworkLibrary\ & if not exist NetworkLibrary\ exit 1
	cd NetworkLibrary\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\NetworkLibrary\NetworkLibrary.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile check
sub-StreetRoadParkClient-check:
	@if not exist StreetRoadParkClient\ mkdir StreetRoadParkClient\ & if not exist StreetRoadParkClient\ exit 1
	cd StreetRoadParkClient\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\StreetRoadParkClient\StreetRoadParkClient.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile check
sub-Test-check:
	@if not exist Test\ mkdir Test\ & if not exist Test\ exit 1
	cd Test\ && ( if not exist Makefile $(QMAKE) D:\StreetRoadPark\Test\Test.pro -spec win32-g++ -o Makefile ) && $(MAKE) -f Makefile check
check: sub-StreetRoadParkServer-check sub-SerialPortLibrary-check sub-DatabaseLibrary-check sub-NetworkLibrary-check sub-StreetRoadParkClient-check sub-Test-check
install: install_subtargets  FORCE

uninstall:  uninstall_subtargets FORCE

FORCE:

